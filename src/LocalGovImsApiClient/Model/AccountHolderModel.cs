/*
 * LocalGovImsApi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = LocalGovImsApiClient.Client.OpenAPIDateConverter;

namespace LocalGovImsApiClient.Model
{
    /// <summary>
    /// AccountHolderModel
    /// </summary>
    [DataContract(Name = "AccountHolderModel")]
    public partial class AccountHolderModel : IEquatable<AccountHolderModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountHolderModel" /> class.
        /// </summary>
        /// <param name="accountReference">accountReference.</param>
        /// <param name="fundCode">fundCode.</param>
        /// <param name="currentBalance">currentBalance.</param>
        /// <param name="periodCredit">periodCredit.</param>
        /// <param name="periodDebit">periodDebit.</param>
        /// <param name="title">title.</param>
        /// <param name="forename">forename.</param>
        /// <param name="surname">surname.</param>
        /// <param name="houseNumber">houseNumber.</param>
        /// <param name="addressLine1">addressLine1.</param>
        /// <param name="addressLine2">addressLine2.</param>
        /// <param name="addressLine3">addressLine3.</param>
        /// <param name="addressLine4">addressLine4.</param>
        /// <param name="postcode">postcode.</param>
        /// <param name="recordType">recordType.</param>
        /// <param name="userField1">userField1.</param>
        /// <param name="userField2">userField2.</param>
        /// <param name="userField3">userField3.</param>
        /// <param name="personalisedStopMessage">personalisedStopMessage.</param>
        /// <param name="stopMessageReference">stopMessageReference.</param>
        public AccountHolderModel(string accountReference = default(string), string fundCode = default(string), decimal? currentBalance = default(decimal?), decimal? periodCredit = default(decimal?), decimal? periodDebit = default(decimal?), string title = default(string), string forename = default(string), string surname = default(string), string houseNumber = default(string), string addressLine1 = default(string), string addressLine2 = default(string), string addressLine3 = default(string), string addressLine4 = default(string), string postcode = default(string), string recordType = default(string), string userField1 = default(string), string userField2 = default(string), string userField3 = default(string), string personalisedStopMessage = default(string), string stopMessageReference = default(string))
        {
            this.AccountReference = accountReference;
            this.FundCode = fundCode;
            this.CurrentBalance = currentBalance;
            this.PeriodCredit = periodCredit;
            this.PeriodDebit = periodDebit;
            this.Title = title;
            this.Forename = forename;
            this.Surname = surname;
            this.HouseNumber = houseNumber;
            this.AddressLine1 = addressLine1;
            this.AddressLine2 = addressLine2;
            this.AddressLine3 = addressLine3;
            this.AddressLine4 = addressLine4;
            this.Postcode = postcode;
            this.RecordType = recordType;
            this.UserField1 = userField1;
            this.UserField2 = userField2;
            this.UserField3 = userField3;
            this.PersonalisedStopMessage = personalisedStopMessage;
            this.StopMessageReference = stopMessageReference;
        }

        /// <summary>
        /// Gets or Sets AccountReference
        /// </summary>
        [DataMember(Name = "AccountReference", EmitDefaultValue = true)]
        public string AccountReference { get; set; }

        /// <summary>
        /// Gets or Sets FundCode
        /// </summary>
        [DataMember(Name = "FundCode", EmitDefaultValue = true)]
        public string FundCode { get; set; }

        /// <summary>
        /// Gets or Sets CurrentBalance
        /// </summary>
        [DataMember(Name = "CurrentBalance", EmitDefaultValue = true)]
        public decimal? CurrentBalance { get; set; }

        /// <summary>
        /// Gets or Sets PeriodCredit
        /// </summary>
        [DataMember(Name = "PeriodCredit", EmitDefaultValue = true)]
        public decimal? PeriodCredit { get; set; }

        /// <summary>
        /// Gets or Sets PeriodDebit
        /// </summary>
        [DataMember(Name = "PeriodDebit", EmitDefaultValue = true)]
        public decimal? PeriodDebit { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name = "Title", EmitDefaultValue = true)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Forename
        /// </summary>
        [DataMember(Name = "Forename", EmitDefaultValue = true)]
        public string Forename { get; set; }

        /// <summary>
        /// Gets or Sets Surname
        /// </summary>
        [DataMember(Name = "Surname", EmitDefaultValue = true)]
        public string Surname { get; set; }

        /// <summary>
        /// Gets or Sets HouseNumber
        /// </summary>
        [DataMember(Name = "HouseNumber", EmitDefaultValue = true)]
        public string HouseNumber { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine1
        /// </summary>
        [DataMember(Name = "AddressLine1", EmitDefaultValue = true)]
        public string AddressLine1 { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine2
        /// </summary>
        [DataMember(Name = "AddressLine2", EmitDefaultValue = true)]
        public string AddressLine2 { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine3
        /// </summary>
        [DataMember(Name = "AddressLine3", EmitDefaultValue = true)]
        public string AddressLine3 { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine4
        /// </summary>
        [DataMember(Name = "AddressLine4", EmitDefaultValue = true)]
        public string AddressLine4 { get; set; }

        /// <summary>
        /// Gets or Sets Postcode
        /// </summary>
        [DataMember(Name = "Postcode", EmitDefaultValue = true)]
        public string Postcode { get; set; }

        /// <summary>
        /// Gets or Sets RecordType
        /// </summary>
        [DataMember(Name = "RecordType", EmitDefaultValue = true)]
        public string RecordType { get; set; }

        /// <summary>
        /// Gets or Sets UserField1
        /// </summary>
        [DataMember(Name = "UserField1", EmitDefaultValue = true)]
        public string UserField1 { get; set; }

        /// <summary>
        /// Gets or Sets UserField2
        /// </summary>
        [DataMember(Name = "UserField2", EmitDefaultValue = true)]
        public string UserField2 { get; set; }

        /// <summary>
        /// Gets or Sets UserField3
        /// </summary>
        [DataMember(Name = "UserField3", EmitDefaultValue = true)]
        public string UserField3 { get; set; }

        /// <summary>
        /// Gets or Sets PersonalisedStopMessage
        /// </summary>
        [DataMember(Name = "PersonalisedStopMessage", EmitDefaultValue = true)]
        public string PersonalisedStopMessage { get; set; }

        /// <summary>
        /// Gets or Sets StopMessageReference
        /// </summary>
        [DataMember(Name = "StopMessageReference", EmitDefaultValue = true)]
        public string StopMessageReference { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AccountHolderModel {\n");
            sb.Append("  AccountReference: ").Append(AccountReference).Append("\n");
            sb.Append("  FundCode: ").Append(FundCode).Append("\n");
            sb.Append("  CurrentBalance: ").Append(CurrentBalance).Append("\n");
            sb.Append("  PeriodCredit: ").Append(PeriodCredit).Append("\n");
            sb.Append("  PeriodDebit: ").Append(PeriodDebit).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Forename: ").Append(Forename).Append("\n");
            sb.Append("  Surname: ").Append(Surname).Append("\n");
            sb.Append("  HouseNumber: ").Append(HouseNumber).Append("\n");
            sb.Append("  AddressLine1: ").Append(AddressLine1).Append("\n");
            sb.Append("  AddressLine2: ").Append(AddressLine2).Append("\n");
            sb.Append("  AddressLine3: ").Append(AddressLine3).Append("\n");
            sb.Append("  AddressLine4: ").Append(AddressLine4).Append("\n");
            sb.Append("  Postcode: ").Append(Postcode).Append("\n");
            sb.Append("  RecordType: ").Append(RecordType).Append("\n");
            sb.Append("  UserField1: ").Append(UserField1).Append("\n");
            sb.Append("  UserField2: ").Append(UserField2).Append("\n");
            sb.Append("  UserField3: ").Append(UserField3).Append("\n");
            sb.Append("  PersonalisedStopMessage: ").Append(PersonalisedStopMessage).Append("\n");
            sb.Append("  StopMessageReference: ").Append(StopMessageReference).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AccountHolderModel);
        }

        /// <summary>
        /// Returns true if AccountHolderModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AccountHolderModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AccountHolderModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AccountReference == input.AccountReference ||
                    (this.AccountReference != null &&
                    this.AccountReference.Equals(input.AccountReference))
                ) && 
                (
                    this.FundCode == input.FundCode ||
                    (this.FundCode != null &&
                    this.FundCode.Equals(input.FundCode))
                ) && 
                (
                    this.CurrentBalance == input.CurrentBalance ||
                    (this.CurrentBalance != null &&
                    this.CurrentBalance.Equals(input.CurrentBalance))
                ) && 
                (
                    this.PeriodCredit == input.PeriodCredit ||
                    (this.PeriodCredit != null &&
                    this.PeriodCredit.Equals(input.PeriodCredit))
                ) && 
                (
                    this.PeriodDebit == input.PeriodDebit ||
                    (this.PeriodDebit != null &&
                    this.PeriodDebit.Equals(input.PeriodDebit))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.Forename == input.Forename ||
                    (this.Forename != null &&
                    this.Forename.Equals(input.Forename))
                ) && 
                (
                    this.Surname == input.Surname ||
                    (this.Surname != null &&
                    this.Surname.Equals(input.Surname))
                ) && 
                (
                    this.HouseNumber == input.HouseNumber ||
                    (this.HouseNumber != null &&
                    this.HouseNumber.Equals(input.HouseNumber))
                ) && 
                (
                    this.AddressLine1 == input.AddressLine1 ||
                    (this.AddressLine1 != null &&
                    this.AddressLine1.Equals(input.AddressLine1))
                ) && 
                (
                    this.AddressLine2 == input.AddressLine2 ||
                    (this.AddressLine2 != null &&
                    this.AddressLine2.Equals(input.AddressLine2))
                ) && 
                (
                    this.AddressLine3 == input.AddressLine3 ||
                    (this.AddressLine3 != null &&
                    this.AddressLine3.Equals(input.AddressLine3))
                ) && 
                (
                    this.AddressLine4 == input.AddressLine4 ||
                    (this.AddressLine4 != null &&
                    this.AddressLine4.Equals(input.AddressLine4))
                ) && 
                (
                    this.Postcode == input.Postcode ||
                    (this.Postcode != null &&
                    this.Postcode.Equals(input.Postcode))
                ) && 
                (
                    this.RecordType == input.RecordType ||
                    (this.RecordType != null &&
                    this.RecordType.Equals(input.RecordType))
                ) && 
                (
                    this.UserField1 == input.UserField1 ||
                    (this.UserField1 != null &&
                    this.UserField1.Equals(input.UserField1))
                ) && 
                (
                    this.UserField2 == input.UserField2 ||
                    (this.UserField2 != null &&
                    this.UserField2.Equals(input.UserField2))
                ) && 
                (
                    this.UserField3 == input.UserField3 ||
                    (this.UserField3 != null &&
                    this.UserField3.Equals(input.UserField3))
                ) && 
                (
                    this.PersonalisedStopMessage == input.PersonalisedStopMessage ||
                    (this.PersonalisedStopMessage != null &&
                    this.PersonalisedStopMessage.Equals(input.PersonalisedStopMessage))
                ) && 
                (
                    this.StopMessageReference == input.StopMessageReference ||
                    (this.StopMessageReference != null &&
                    this.StopMessageReference.Equals(input.StopMessageReference))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountReference != null)
                {
                    hashCode = (hashCode * 59) + this.AccountReference.GetHashCode();
                }
                if (this.FundCode != null)
                {
                    hashCode = (hashCode * 59) + this.FundCode.GetHashCode();
                }
                if (this.CurrentBalance != null)
                {
                    hashCode = (hashCode * 59) + this.CurrentBalance.GetHashCode();
                }
                if (this.PeriodCredit != null)
                {
                    hashCode = (hashCode * 59) + this.PeriodCredit.GetHashCode();
                }
                if (this.PeriodDebit != null)
                {
                    hashCode = (hashCode * 59) + this.PeriodDebit.GetHashCode();
                }
                if (this.Title != null)
                {
                    hashCode = (hashCode * 59) + this.Title.GetHashCode();
                }
                if (this.Forename != null)
                {
                    hashCode = (hashCode * 59) + this.Forename.GetHashCode();
                }
                if (this.Surname != null)
                {
                    hashCode = (hashCode * 59) + this.Surname.GetHashCode();
                }
                if (this.HouseNumber != null)
                {
                    hashCode = (hashCode * 59) + this.HouseNumber.GetHashCode();
                }
                if (this.AddressLine1 != null)
                {
                    hashCode = (hashCode * 59) + this.AddressLine1.GetHashCode();
                }
                if (this.AddressLine2 != null)
                {
                    hashCode = (hashCode * 59) + this.AddressLine2.GetHashCode();
                }
                if (this.AddressLine3 != null)
                {
                    hashCode = (hashCode * 59) + this.AddressLine3.GetHashCode();
                }
                if (this.AddressLine4 != null)
                {
                    hashCode = (hashCode * 59) + this.AddressLine4.GetHashCode();
                }
                if (this.Postcode != null)
                {
                    hashCode = (hashCode * 59) + this.Postcode.GetHashCode();
                }
                if (this.RecordType != null)
                {
                    hashCode = (hashCode * 59) + this.RecordType.GetHashCode();
                }
                if (this.UserField1 != null)
                {
                    hashCode = (hashCode * 59) + this.UserField1.GetHashCode();
                }
                if (this.UserField2 != null)
                {
                    hashCode = (hashCode * 59) + this.UserField2.GetHashCode();
                }
                if (this.UserField3 != null)
                {
                    hashCode = (hashCode * 59) + this.UserField3.GetHashCode();
                }
                if (this.PersonalisedStopMessage != null)
                {
                    hashCode = (hashCode * 59) + this.PersonalisedStopMessage.GetHashCode();
                }
                if (this.StopMessageReference != null)
                {
                    hashCode = (hashCode * 59) + this.StopMessageReference.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
